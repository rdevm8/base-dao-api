// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using base_dao_api.Data;

#nullable disable

namespace base_dao_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220805050831_v0.048")]
    partial class v0048
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DetailCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CodeHeaderId");

                    b.HasIndex("DetailCd")
                        .IsUnique();

                    b.ToTable("CodeDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65aea546-af92-4938-b244-81836d7477d9"),
                            CodeHeaderId = new Guid("42be1ccb-ae0f-4748-a591-8c73c17be5c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7058),
                            CreatedBy = "SYSTEM",
                            Description = "System User",
                            DetailCd = "ROLE-SYSTEM",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7059),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("4def19b6-49ff-4183-9e47-866fc9dd9c3d"),
                            CodeHeaderId = new Guid("42be1ccb-ae0f-4748-a591-8c73c17be5c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7062),
                            CreatedBy = "SYSTEM",
                            Description = "Admin User",
                            DetailCd = "ROLE-ADMIN",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7062),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("dbafb88b-845c-4e6c-8f35-c3e20db898f6"),
                            CodeHeaderId = new Guid("42be1ccb-ae0f-4748-a591-8c73c17be5c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7066),
                            CreatedBy = "SYSTEM",
                            Description = "Normal User",
                            DetailCd = "ROLE-NORMAL",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7066),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("f4f1eff3-a5e5-4c59-83ca-0a4676e9617c"),
                            CodeHeaderId = new Guid("3e6302a1-99fe-4d4b-a731-f7b449dc51c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7070),
                            CreatedBy = "SYSTEM",
                            Description = "Pool OPEN",
                            DetailCd = "PSTATUS-OPEN",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7071),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("fb599b2d-d489-4377-a3df-10f02c53ee2f"),
                            CodeHeaderId = new Guid("3e6302a1-99fe-4d4b-a731-f7b449dc51c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7077),
                            CreatedBy = "SYSTEM",
                            Description = "Pool ONGOING",
                            DetailCd = "PSTATUS-ONGOING",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7077),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("493b376c-d7f6-438a-8730-0254d5a02a37"),
                            CodeHeaderId = new Guid("3e6302a1-99fe-4d4b-a731-f7b449dc51c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7079),
                            CreatedBy = "SYSTEM",
                            Description = "Pool CLOSED",
                            DetailCd = "PSTATUS-CLOSED",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7079),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HeaderCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderCd")
                        .IsUnique();

                    b.ToTable("CodeHeaders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42be1ccb-ae0f-4748-a591-8c73c17be5c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(6363),
                            CreatedBy = "SYSTEM",
                            Description = "CodeHeader for User Roles",
                            HeaderCd = "ROLE",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(6365),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("3e6302a1-99fe-4d4b-a731-f7b449dc51c4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(6370),
                            CreatedBy = "SYSTEM",
                            Description = "CodeHeader for Pool Statuses",
                            HeaderCd = "PSTATUS",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(6371),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Faq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1e77f882-dae4-4999-9f8e-96744d715096"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7519),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 1,
                            Question = "What is Wick's Crew?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7519),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("babe1567-4329-4cd0-8a22-b0ead3a39c67"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7522),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 2,
                            Question = "What are Pooling Considerations?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7522),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("db9d9f76-042c-41ec-9d23-8686e16d1fda"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7524),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 3,
                            Question = "What are the Pooling Rules?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7524),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("2b2ff831-73eb-43dc-8178-c20fc514c886"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7525),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 4,
                            Question = "What are the Available Pools?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7526),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("d486524e-0c7a-41ff-b0aa-09788b56ac56"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7527),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 5,
                            Question = "How are the Funds Distributed?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7527),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinInvestment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.HasIndex("StatusId");

                    b.ToTable("PoolActivities");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmtInvested")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmtReturned")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.HasIndex("StatusId");

                    b.ToTable("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a118806-d143-4fc1-9201-99d1ced37122"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7929),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Name = "SYSTEM",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7930),
                            UpdatedBy = "SYSTEM",
                            WalletAddress = "0x8c268f32D7F129ac0D9FB1E5B490d90810dFa446"
                        },
                        new
                        {
                            Id = new Guid("52d09425-fb12-4945-b99c-e70b3e017096"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7936),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Name = "ADMIN-1",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(7936),
                            UpdatedBy = "SYSTEM",
                            WalletAddress = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e758dc3-bbdb-477c-84f0-7770d994a5a4"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(9108),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            RoleId = new Guid("65aea546-af92-4938-b244-81836d7477d9"),
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(9109),
                            UpdatedBy = "SYSTEM",
                            UserId = new Guid("8a118806-d143-4fc1-9201-99d1ced37122")
                        },
                        new
                        {
                            Id = new Guid("9cfe6f00-0add-4f85-aa20-10f5d2ff81b6"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(9111),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            RoleId = new Guid("4def19b6-49ff-4183-9e47-866fc9dd9c3d"),
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 8, 31, 211, DateTimeKind.Utc).AddTicks(9112),
                            UpdatedBy = "SYSTEM",
                            UserId = new Guid("52d09425-fb12-4945-b99c-e70b3e017096")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeHeader", "CodeHeader")
                        .WithMany("CodeDetails")
                        .HasForeignKey("CodeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeHeader");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolActivities")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolFunders")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Navigation("CodeDetails");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Navigation("PoolActivities");

                    b.Navigation("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
