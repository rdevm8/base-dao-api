// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using base_dao_api.Data;

#nullable disable

namespace base_dao_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220804043209_v0.041")]
    partial class v0041
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DetailCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeHeaderId");

                    b.ToTable("CodeDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46aedee3-c9e6-4204-ad04-97c96a6ab07a"),
                            CodeHeaderId = new Guid("01a147bd-9e4b-4f60-8dba-ff7d75ae7280"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(753),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "Admin User",
                            DetailCd = "ROLE-ADMIN",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(753),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("e996353d-8f34-4b5b-8f74-d6fdc8bf5f76"),
                            CodeHeaderId = new Guid("01a147bd-9e4b-4f60-8dba-ff7d75ae7280"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(757),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "Normal User",
                            DetailCd = "ROLE-NORMAL",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(758),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("ef9be470-b772-483c-a782-ab1f371b094c"),
                            CodeHeaderId = new Guid("e18e094a-ee28-45f6-93de-54c99263d06d"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(759),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "Pool OPEN",
                            DetailCd = "PSTATUS-OPEN",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(760),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("88ae6abb-78f6-4aee-8103-6bb2ce5e7d31"),
                            CodeHeaderId = new Guid("e18e094a-ee28-45f6-93de-54c99263d06d"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(761),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "Pool ONGOING",
                            DetailCd = "PSTATUS-ONGOING",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(762),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("c7d0105a-cc82-4f97-bc4c-79f0d21e483b"),
                            CodeHeaderId = new Guid("e18e094a-ee28-45f6-93de-54c99263d06d"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(763),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "Pool CLOSED",
                            DetailCd = "PSTATUS-CLOSED",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(764),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HeaderCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CodeHeaders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01a147bd-9e4b-4f60-8dba-ff7d75ae7280"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(583),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "CodeHeader for User Roles",
                            HeaderCd = "ROLE",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(592),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("e18e094a-ee28-45f6-93de-54c99263d06d"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(596),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            Description = "CodeHeader for Pool Statuses",
                            HeaderCd = "PSTATUS",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(597),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Faq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e55e8522-06a4-4a14-9d36-0c90d5496b1c"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(901),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Order = 1,
                            Question = "What is Wick's Crew?",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(902),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("0dc1e163-3bdc-4c2e-8033-8cc11284901d"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(909),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Order = 2,
                            Question = "What are Pooling Considerations?",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(910),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("9f45a9e7-d421-4b8a-90c8-455164e13930"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(911),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Order = 3,
                            Question = "What are the Pooling Rules?",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(912),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("750624a4-919d-4b0e-ab32-2415bf703dc1"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(913),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Order = 4,
                            Question = "What are the Available Pools?",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(914),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        },
                        new
                        {
                            Id = new Guid("f26fbd08-c78e-451b-8cab-b185760f7be0"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(915),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Order = 5,
                            Question = "How are the Funds Distributed?",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(916),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinInvestment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.HasIndex("PoolId");

                    b.ToTable("PoolActivities");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmtInvested")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmtReturned")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.ToTable("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c0d556e3-4b87-445c-9868-8cce26999e2e"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1684),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Name = "",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1686),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            WalletAddress = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
                        },
                        new
                        {
                            Id = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1692),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            Name = "SYSTEM",
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1692),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            WalletAddress = ""
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b6c9a88-58d4-4e5d-93c9-da8b9e478f73"),
                            CodeDetailId = new Guid("46aedee3-c9e6-4204-ad04-97c96a6ab07a"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1778),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1779),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            UserId = new Guid("c0d556e3-4b87-445c-9868-8cce26999e2e")
                        },
                        new
                        {
                            Id = new Guid("277e912b-b949-4f80-9656-fc1f0f15ce32"),
                            CodeDetailId = new Guid("46aedee3-c9e6-4204-ad04-97c96a6ab07a"),
                            CreateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1782),
                            CreateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 12, 32, 8, 934, DateTimeKind.Local).AddTicks(1782),
                            UpdateUserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5"),
                            UserId = new Guid("7245961c-a057-4047-a4b1-82e40f929aa5")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeHeader", "CodeHeader")
                        .WithMany("CodeDetails")
                        .HasForeignKey("CodeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeHeader");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeDetail");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolActivities")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CodeDetail");

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolFunders")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Navigation("CodeDetails");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Navigation("PoolActivities");

                    b.Navigation("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
