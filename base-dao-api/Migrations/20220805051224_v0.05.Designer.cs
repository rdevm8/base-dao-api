// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using base_dao_api.Data;

#nullable disable

namespace base_dao_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220805051224_v0.05")]
    partial class v005
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DetailCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CodeHeaderId");

                    b.HasIndex("DetailCd")
                        .IsUnique();

                    b.ToTable("CodeDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2deb65ba-dc2d-4d1d-b65b-96449ca876b2"),
                            CodeHeaderId = new Guid("cad9cbd3-b334-4827-92da-ba986d07d658"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4549),
                            CreatedBy = "SYSTEM",
                            Description = "System User",
                            DetailCd = "ROLE-SYSTEM",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4550),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("ac07ff79-4792-4d96-9dca-b1c38b2fb5d9"),
                            CodeHeaderId = new Guid("cad9cbd3-b334-4827-92da-ba986d07d658"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4553),
                            CreatedBy = "SYSTEM",
                            Description = "Admin User",
                            DetailCd = "ROLE-ADMIN",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4554),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("7508605d-8d64-412d-b432-514810043eb8"),
                            CodeHeaderId = new Guid("cad9cbd3-b334-4827-92da-ba986d07d658"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4556),
                            CreatedBy = "SYSTEM",
                            Description = "Normal User",
                            DetailCd = "ROLE-NORMAL",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4556),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("2379da2d-12d5-41c4-beea-b4811a4ac0fe"),
                            CodeHeaderId = new Guid("9379bf85-666f-4edc-bd67-3519b29c991c"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4566),
                            CreatedBy = "SYSTEM",
                            Description = "Pool OPEN",
                            DetailCd = "PSTATUS-OPEN",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4566),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("c937c13b-de72-457b-99fb-40ef1f148628"),
                            CodeHeaderId = new Guid("9379bf85-666f-4edc-bd67-3519b29c991c"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4569),
                            CreatedBy = "SYSTEM",
                            Description = "Pool ONGOING",
                            DetailCd = "PSTATUS-ONGOING",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4569),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("f0674d98-917e-4d28-9f47-8a289864e4ae"),
                            CodeHeaderId = new Guid("9379bf85-666f-4edc-bd67-3519b29c991c"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4572),
                            CreatedBy = "SYSTEM",
                            Description = "Pool CLOSED",
                            DetailCd = "PSTATUS-CLOSED",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(4572),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HeaderCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("HeaderCd")
                        .IsUnique();

                    b.ToTable("CodeHeaders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cad9cbd3-b334-4827-92da-ba986d07d658"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(3572),
                            CreatedBy = "SYSTEM",
                            Description = "CodeHeader for User Roles",
                            HeaderCd = "ROLE",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(3575),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("9379bf85-666f-4edc-bd67-3519b29c991c"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(3581),
                            CreatedBy = "SYSTEM",
                            Description = "CodeHeader for Pool Statuses",
                            HeaderCd = "PSTATUS",
                            IsDeleted = false,
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(3582),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Faq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Order")
                        .IsUnique();

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d956ed07-29cf-4ef9-9319-3d6c6221b3a3"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5084),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 1,
                            Question = "What is Wick's Crew?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5085),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("2c7fc0c2-4d1e-43fc-9edd-04a206fe3e32"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5087),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 2,
                            Question = "What are Pooling Considerations?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5088),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("0152d32b-4ba9-4175-92f3-10b21218ad67"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5089),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 3,
                            Question = "What are the Pooling Rules?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5090),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("42a8e54c-fe7b-4eca-a9e5-4b7e5cf4a753"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5091),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 4,
                            Question = "What are the Available Pools?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5091),
                            UpdatedBy = "SYSTEM"
                        },
                        new
                        {
                            Id = new Guid("207a74dd-90a5-4d95-90e5-20d32029bf81"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5092),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Order = 5,
                            Question = "How are the Funds Distributed?",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5093),
                            UpdatedBy = "SYSTEM"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinInvestment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.HasIndex("StatusId");

                    b.ToTable("PoolActivities");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmtInvested")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmtReturned")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.HasIndex("StatusId");

                    b.ToTable("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4a19bc7-abb2-44e7-b9eb-dc866dae266d"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5693),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Name = "SYSTEM",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5694),
                            UpdatedBy = "SYSTEM",
                            WalletAddress = "0x8c268f32D7F129ac0D9FB1E5B490d90810dFa446"
                        },
                        new
                        {
                            Id = new Guid("2afbf58b-c7a9-4494-8037-7f2835fbc9a7"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5697),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            Name = "ADMIN-1",
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(5698),
                            UpdatedBy = "SYSTEM",
                            WalletAddress = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1bc3c37a-ea63-4e23-a8d4-3d0e43323749"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(6975),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            RoleId = new Guid("2deb65ba-dc2d-4d1d-b65b-96449ca876b2"),
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(6976),
                            UpdatedBy = "SYSTEM",
                            UserId = new Guid("b4a19bc7-abb2-44e7-b9eb-dc866dae266d")
                        },
                        new
                        {
                            Id = new Guid("de19548f-9628-4159-b4a8-6b95913bce1a"),
                            CreateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(6979),
                            CreatedBy = "SYSTEM",
                            IsDeleted = false,
                            RoleId = new Guid("ac07ff79-4792-4d96-9dca-b1c38b2fb5d9"),
                            UpdateDttm = new DateTime(2022, 8, 5, 5, 12, 24, 344, DateTimeKind.Utc).AddTicks(6980),
                            UpdatedBy = "SYSTEM",
                            UserId = new Guid("2afbf58b-c7a9-4494-8037-7f2835fbc9a7")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeHeader", "CodeHeader")
                        .WithMany("CodeDetails")
                        .HasForeignKey("CodeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeHeader");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolActivities")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolFunders")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.CodeDetail", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pool");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Navigation("CodeDetails");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Navigation("PoolActivities");

                    b.Navigation("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
