// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using base_dao_api.Data;

#nullable disable

namespace base_dao_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220804051408_v0.042")]
    partial class v0042
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeHeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DetailCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeHeaderId");

                    b.ToTable("CodeDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ddea8cd-46e2-4e1b-bec0-a75a2bb2f1b9"),
                            CodeHeaderId = new Guid("51aa911f-5328-4c83-9865-14874520b17c"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3294),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "Admin User",
                            DetailCd = "ROLE-ADMIN",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3295),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("9bf8f484-326f-4c3f-8fce-6af26c04fdbd"),
                            CodeHeaderId = new Guid("51aa911f-5328-4c83-9865-14874520b17c"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3299),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "Normal User",
                            DetailCd = "ROLE-NORMAL",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3300),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("16dff03f-6567-4433-ba95-d9915840cbbf"),
                            CodeHeaderId = new Guid("f437f9c0-f79b-45c3-af13-90a58f9af3c2"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3302),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "Pool OPEN",
                            DetailCd = "PSTATUS-OPEN",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3302),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("dbfba4e3-e09c-4a8a-bc22-8d01317b7bc9"),
                            CodeHeaderId = new Guid("f437f9c0-f79b-45c3-af13-90a58f9af3c2"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3304),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "Pool ONGOING",
                            DetailCd = "PSTATUS-ONGOING",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3304),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("8f673f2a-3e5a-4d83-8f23-15bf30c356c1"),
                            CodeHeaderId = new Guid("f437f9c0-f79b-45c3-af13-90a58f9af3c2"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3309),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "Pool CLOSED",
                            DetailCd = "PSTATUS-CLOSED",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3310),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("HeaderCd")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("CodeHeaders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("51aa911f-5328-4c83-9865-14874520b17c"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3132),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "CodeHeader for User Roles",
                            HeaderCd = "ROLE",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3141),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("f437f9c0-f79b-45c3-af13-90a58f9af3c2"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3144),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            Description = "CodeHeader for Pool Statuses",
                            HeaderCd = "PSTATUS",
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3145),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Faq", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Faqs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a667261b-ecfa-49f2-beed-fb5302900d33"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3474),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Order = 1,
                            Question = "What is Wick's Crew?",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3475),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("14297d94-c7d2-4c20-9acb-30a7ea2bde98"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3479),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Order = 2,
                            Question = "What are Pooling Considerations?",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3479),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("54c9bf8e-37a5-436f-a153-e4e1923fe583"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3481),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Order = 3,
                            Question = "What are the Pooling Rules?",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3481),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("2d0e79d7-76bf-4d3c-9671-f8d2159eb1df"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3482),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Order = 4,
                            Question = "What are the Available Pools?",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3483),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        },
                        new
                        {
                            Id = new Guid("461d9bfd-4d91-4451-942c-c413e49761df"),
                            Answer = "At vero eos et accusamus et iusto",
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3484),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Order = 5,
                            Question = "How are the Funds Distributed?",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(3485),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("MinInvestment")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.ToTable("Pools");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.HasIndex("PoolId");

                    b.ToTable("PoolActivities");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmtInvested")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmtReturned")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PoolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("PoolId");

                    b.ToTable("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(42)
                        .HasColumnType("nvarchar(42)");

                    b.HasKey("Id");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8cb4de77-2dec-431d-bb36-bf4c03f907bc"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4242),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Name = "",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4244),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            WalletAddress = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
                        },
                        new
                        {
                            Id = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4251),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            Name = "SYSTEM",
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4252),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            WalletAddress = ""
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CodeDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateDttm")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UpdateUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CodeDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7097df56-1004-4471-95a1-d1366a564179"),
                            CodeDetailId = new Guid("7ddea8cd-46e2-4e1b-bec0-a75a2bb2f1b9"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4359),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4360),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            UserId = new Guid("8cb4de77-2dec-431d-bb36-bf4c03f907bc")
                        },
                        new
                        {
                            Id = new Guid("c80efd0a-2adc-42bc-b8f9-8f4febde4e5e"),
                            CodeDetailId = new Guid("7ddea8cd-46e2-4e1b-bec0-a75a2bb2f1b9"),
                            CreateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4369),
                            CreateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            IsActive = true,
                            UpdateDttm = new DateTime(2022, 8, 4, 13, 14, 7, 817, DateTimeKind.Local).AddTicks(4369),
                            UpdateUserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81"),
                            UserId = new Guid("063dafae-d932-4204-9a9a-e5ca079c2f81")
                        });
                });

            modelBuilder.Entity("base_dao_api.Models.CodeDetail", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeHeader", "CodeHeader")
                        .WithMany("CodeDetails")
                        .HasForeignKey("CodeHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeHeader");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeDetail");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolActivity", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolActivities")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CodeDetail");

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("base_dao_api.Models.PoolFunder", b =>
                {
                    b.HasOne("base_dao_api.Models.Pool", "Pool")
                        .WithMany("PoolFunders")
                        .HasForeignKey("PoolId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pool");
                });

            modelBuilder.Entity("base_dao_api.Models.UserRole", b =>
                {
                    b.HasOne("base_dao_api.Models.CodeDetail", "CodeDetail")
                        .WithMany()
                        .HasForeignKey("CodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("base_dao_api.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CodeDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("base_dao_api.Models.CodeHeader", b =>
                {
                    b.Navigation("CodeDetails");
                });

            modelBuilder.Entity("base_dao_api.Models.Pool", b =>
                {
                    b.Navigation("PoolActivities");

                    b.Navigation("PoolFunders");
                });

            modelBuilder.Entity("base_dao_api.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
